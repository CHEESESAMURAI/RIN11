from aiogram import types


from bot.config.loader import bot
from usersupport.models import TelegramUser, UserDiscussion
from bot.services.db import user as user_db
from bot.services.db import user_discussion as ud_db
from bot.data import text_data as td
from bot.handlers.user import create_user_disck as reeef
from bot.keyboards import inline as ik

async def answer_from_admin(message: types.Message):

    user_id = int(message.reply_to_message.text.split("\n")[0])
    user: TelegramUser = await user_db.select_user(
        user_id=user_id
    )
    d: UserDiscussion = await ud_db.select_discussion(user=user)
    answer = message.text
    klava = await ik.reg_ref()
    history = f"{d.history}\nA:{answer}"
    await ud_db.add_history(user=user, history=history)
    await bot.send_message(
        chat_id=user_id,
        text=answer,
    )
async def promo(call: types.CallbackQuery):
    global klava

    user_id = call.data.replace("code2_", "",)
    await bot.send_message(user_id,"‚úÖ  –ó–∞—á–∏—Å–ª–∏–ª —Ç–µ–±–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 200 –±–∞–¥–¥–∏-–±–∞–ª–ª–æ–≤, –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π –±–æ–Ω—É—Å–Ω—ã–π —Å—á–µ—Ç! –ñ–¥—É —Ç–µ–±—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–∏, –∏ –Ω–µ –∑–∞–±—É–¥—å –ø–æ–∑–≤–∞—Ç—å –¥—Ä—É–∑–µ–π  üòâ", reply_markup = await ik.reg_ref())
    await call.answer()

    user: TelegramUser = await user_db.select_user(
        user_id=user_id
    )

    ref_id=TelegramUser.objects.filter(user_id=user_id).first().user_ref
    print(ref_id)

    user_ref_coll = TelegramUser.objects.filter(user_id=user_id).first().ref_col

    new_ref_col = int(user_ref_coll) + 4

    TelegramUser.objects.filter(user_id=user_id).update(ref_col=new_ref_col)

    d: UserDiscussion = await ud_db.select_discussion(user=user)
    admins = await user_db.select_all_admins()
    a_list = {a.chanel_id: a.chat_id for a in admins}
    mes_id = d.mes_id
    for admin in a_list:
        await bot.send_message(
            chat_id=a_list[admin],
            text=td.SUCCESS_MESSAGE_CARD,
            reply_to_message_id=mes_id,

        )

async def plus(call: types.CallbackQuery):
    global klava

    user_id = call.data.replace("plus_", "",)
    await bot.send_message(user_id,"+50 –±–∞–ª–ª–æ–≤", reply_markup = await ik.reg_ref())
    await call.answer()

    user: TelegramUser = await user_db.select_user(
        user_id=user_id
    )

    ref_id=TelegramUser.objects.filter(user_id=user_id).first().user_ref
    print(ref_id)


    user_ref_coll = TelegramUser.objects.filter(user_id=user_id).first().ref_col

    new_ref_col = int(user_ref_coll) + 1

    TelegramUser.objects.filter(user_id=user_id).update(ref_col=new_ref_col)

    d: UserDiscussion = await ud_db.select_discussion(user=user)
    admins = await user_db.select_all_admins()
    a_list = {a.chanel_id: a.chat_id for a in admins}
    mes_id = d.mes_id
    for admin in a_list:
        await bot.send_message(
            chat_id=a_list[admin],
            text=td.SUCCESS_MESSAGE_CARD,
            reply_to_message_id=mes_id,

        )


async def send_code(call: types.CallbackQuery):
    global klava

    user_id = call.data.replace("code_", "",)
    await bot.send_message(user_id,"–ü–û–ó–î–†–ê–í–õ–Ø–Æ üéâüéâüéâ\n\n–¢—ã —É—Å–ø–µ—à–Ω–æ —Å–¥–∞–ª —Ç–µ—Å—Ç –∏ –ø—Ä–æ—à–µ–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n\n–ü–µ—Ä–≤—ã–π —à–∞–≥ –Ω–∞ –ø—É—Ç–∏ –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –º–µ—á—Ç—ã —Å–¥–µ–ª–∞–Ω, —Ç–µ–ø–µ—Ä—å —Ç—ã —É—á–µ–Ω–∏–∫ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–∞!\n\n‚ù§ –¢–µ–ø–µ—Ä—å –Ω–∞ —Ç–≤–æ—ë–º –±–æ–Ω—É—Å–Ω–æ–º —Å—á—ë—Ç–µ –ø–æ—è–≤–∏–ª–∏—Å—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ 200 –±–∞–ª–ª–æ–≤! –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—Å –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö –∏ –ø–æ–ª—É—á–∏ +100 –±–∞–ª–ª–æ–≤, –∏ —Ç—ã —É–∂–µ —Å–º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å –∏—Ö –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç! –ê –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å +100 –±–∞–ª–ª–æ–≤. üéÅ", reply_markup = await ik.reg_ref())
    await call.answer()

    user: TelegramUser = await user_db.select_user(
        user_id=user_id
    )

    ref_id=TelegramUser.objects.filter(user_id=user_id).first().user_ref
    print(ref_id)
    user_ref_coll = TelegramUser.objects.filter(user_id=ref_id).first().ref_col

    new_ref_col = int(user_ref_coll) + 2

    TelegramUser.objects.filter(user_id=ref_id).update(ref_col=new_ref_col)

    user_ref_coll = TelegramUser.objects.filter(user_id=user_id).first().ref_col

    new_ref_col = int(user_ref_coll) + 4

    TelegramUser.objects.filter(user_id=user_id).update(ref_col=new_ref_col)
    #print(reeef.reef)
    #print(reeef.reef.title)
    #print(str(reeef.reef))

    #reeef.reef()
    
    d: UserDiscussion = await ud_db.select_discussion(user=user)
    admins = await user_db.select_all_admins()
    a_list = {a.chanel_id: a.chat_id for a in admins}
    mes_id = eval(d.mes_id)
    for admin in a_list:
        await bot.send_message(
            chat_id=a_list[admin],
            text=td.SUCCESS_MESSAGE_CARD,
            reply_to_message_id=mes_id[a_list[admin]],

        )


async def access_denied(call: types.CallbackQuery):
    user_id = call.data.replace("denied_", "")
    await send_mes(user_id, td.TEXT_ANSWER_1)
    await call.answer()

    user: TelegramUser = await user_db.select_user(
        user_id=user_id
    )
    d: UserDiscussion = await ud_db.select_discussion(user=user)
    admins = await user_db.select_all_admins()
    a_list = {a.chanel_id: a.chat_id for a in admins}
    mes_id = eval(d.mes_id)
    for admin in a_list:
        await bot.send_message(
            chat_id=a_list[admin],
            text=td.SUCCESS_MESSAGE_CANCEL,
            reply_to_message_id=mes_id[a_list[admin]]
        )
async def access_denied2(call: types.CallbackQuery):
    user_id = call.data.replace("denied_", "")
    await send_mes(user_id, td.TEXT_ANSWER_4)
    await call.answer()

    user: TelegramUser = await user_db.select_user(
        user_id=user_id
    )
    d: UserDiscussion = await ud_db.select_discussion(user=user)
    admins = await user_db.select_all_admins()
    a_list = {a.chanel_id: a.chat_id for a in admins}
    mes_id = eval(d.mes_id)
    for admin in a_list:
        await bot.send_message(
            chat_id=a_list[admin],
            text=td.SUCCESS_MESSAGE_CANCEL2,
            reply_to_message_id=mes_id[a_list[admin]]
        )

async def send_mes(user_id, text):
    user: TelegramUser = await user_db.select_user(
        user_id=user_id
    )
    d: UserDiscussion = await ud_db.select_discussion(user=user)
    history = f"{d.history}\nA:{text}"
    await ud_db.add_history(user=user, history=history)
    await bot.send_message(
        chat_id=user_id,
        text=text
    )
